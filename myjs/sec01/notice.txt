1. js01.js : 단순 출력문 공부 -> 브라우저 -> 검사 -> 속성확인


2. js02.js : 데이터 유형 공부
    Number, String, Boolean, Undefined, Null, Object, Array, Function, Symbol 
    const(변수를 상수화 ex. PI=3.14), let, var



3. js04.js : 연산자
    산술연산자, 대입연산자, 비교연산자(==, !=), 논리연산자(&&, ||)=true/false, 비트연산자(and &, or |)=1 or 0, 상황연산자[*]

    ex. 2 && 7 = 7  ,   7 && 2 = 2  -> false, true, null, Undefined로 리턴.(자바스크립트에서)
        -> 왼쪽의 피 연산자 2는 'true' (0이 아닌 숫자는 true로 간주).
           왼쪽에 있는 연산자가 true이고 논리 and 연산자는 오른쪽 피연산자를 평가한다. 
           오른쪽 피연산자가 식의 결과로 리턴.
    // 논리곱일 경우, 왼쪽에 있는 피연산자의 결과가 false이면 나머지 연산 안하고 왼쪽 피연산자의 값인 false를 리턴

    ex. 0 && 2 = 0
        -> 왼쪽 피연산자는 '0' 거짓. 따라서 오른쪽을 계산하지 않고 바로 false(0)을 리턴



4. 제어문 if-else if-else : 만일에 ~하면 
    if(조건식) {
        명령;
    }
    
    -----------------------------------------

    if(조건식) { ---> 조건식 true
        명령;
    }
    else{ ---> 조건식 false

    }

    ----------------------------------------  

    if(조건식1) { ---> 조건식 true
        명령1;
    }
    else if(조건식2){ ---> 조건식 true
        명령2;
    }
    else if(조건식3){ ---> 조건식 true
        명령3;
    }
    else{ ---> 조건식 false

    }  



5. js05.js : 제어문_선택문_switch ~ case 문
    - 하나의 switch는 여러 개의 case와 하나의 default를 가질 수 있다.
    - case "값" : 는 정렬이 아니다. (점프해서 명령 수행 후 종료)


    switch(변수(값)){
        case "값1" : 명령; [break;]
        case "값2" : 명령; [break;]
        case "값3" : 명령; [break;]
        case "값4" : 명령; [break;]
        default: 명령;
        break;
    }

    

6. js06.js : 제어문_반복문_while문

    while(boolean){  ---->조건식의 결과가 true일 때 명령을 수행
        명령;
    }


7. js07_while.js : 배열과 인덱스


8. js08_for.js : 제어문_ 반복문_for문
    - 초기값, 증감식은 여러개 ,로 나열이 가능하다. 단, 조건식의 결과가 boolean 이어야 한다.ㅏ

    for(초기값-1; 조건식-2; 증감식-4){
        명령-3;
    }

    1->2->3->4
       2->3->4
       2->3->4 : 조건식 false가 되면 끝.


